{"version":3,"sources":["reportWebVitals.js","chart/presenter.js","api.js","chart/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","styled","div","ChartContainer","ChartNavigations","ButtonContainer","title","Button","button","ChartCanvas","Loading","RightContainer","SymbolsContainer","SymbolAddButton","disabled","CompareContainer","CompareSymbols","CompareSymbolLine","VisibleButton","HighlightButton","RemoveButton","TooltipContainer","TooltipItem","color","removed","LineTooltipContainer","LineTooltipItem","visible","Presenter","setRef","setTooltipRef","setLineTooltipCanvasRef","ranges","intervals","state","symbol","symbols","loading","charts","onAddSymbolClick","mouseOut","onRemoveSymbolClick","onResetClick","onRangeClick","onIntervalClick","onVisibleClick","onHighlightClick","compares","filter","d","comparedSymbols","map","onClick","i","text","value","sub","j","barSpacing","id","ref","includes","style","width","visibility","hightlight","request","url","axios","get","headers","data","getSeries","a","historical","time","date","adjClose","reverse","Chart","props","intialize","chartCanvasRef","chart","createChart","clientWidth","localization","dateFormat","priceScale","mode","autoScale","scaleMargins","top","bottom","subscribeCrosshairMove","param","point","seriesPrices","size","tootipCanvasRef","display","lineTooltipCanvasRef","x","tooltips","y","Array","from","children","lineTooltips","forEach","series","tooltip","lineTooltip","timeScale","getVisibleRange","coordinate","priceToCoordinate","initValue","find","day","month","year","percent","innerText","toFixed","left","tooltipsWidth","chartAreaWidth","options","tooltipX","maxX","Math","min","max","setSymbols","setSeries","setTimeout","fitContent","setState","isSameSymbol","findIndex","s","setSeriesIndex","splice","lineSeries","addLineSeries","lastValueVisible","setData","push","updateCharts","removeSeries","undefined","setVisibleRange","moment","lastDate","subtract","unix","to","filteredData","getFilteredSeries","applyOptions","lineWidth","nextFilterDate","pipe","clone","isSameOrBefore","defaultSymbol","interval","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff782da3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n    display: flex;\n    width: 100vw;\n    margin-top: 12px;\n`;\n\nconst ChartContainer = styled.div`\n    width: 70%;\n    max-width: 700px;\n    height: 500px;\n`;\n\nconst ChartNavigations = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    margin-right: 8px;\n    border: 1px solid;\n    padding: 4px;\n    height: 30px;\n\n    ${({title}) => title ? `\n        &::before {\n            content: '${title}';\n            margin-right: 4px;\n        }\n    ` : ''}\n`;\n\nconst Button = styled.button`\n    height: 20px;\n`;\n\nconst ChartCanvas = styled.div`\n    height: calc(100% - 30px);\n    position: relative;\n`;\n\nconst Loading = styled.div`\n    width: 100%;\n    height: 100%;\n    background: white;\n    top: 0;\n    left: 0;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 100;\n`;\n\nconst RightContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-width: 300px;\n`;\n\nconst SymbolsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    margin-bottom: 20px;\n`;\n\nconst SymbolAddButton = styled.button`\n    width: 50px;\n    height: 50px;\n    ${({disabled}) => disabled ? `\n        pointer-events: none;\n        opacity: 0.7;\n    ` : ''}\n`;\n\nconst CompareContainer = styled.div``;\nconst CompareSymbols = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst CompareSymbolLine = styled.div`\n    width: 100%;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid black;\n`;\n\nconst VisibleButton = styled.button`\n    width: 60px;\n    height: 20px;\n    margin-left: 12px;\n`;\n\nconst HighlightButton = styled(VisibleButton)`\n    width: 70px;\n`;\n\nconst RemoveButton = styled.button`\n    width: 40px;\n    height: 20px;\n    margin-left: 12px;\n`;\n\nconst TooltipContainer = styled.div`\n    background: rgba(0,0,0,0.3);\n    width: 220px;\n    padding: 4px;\n    display: none;\n    border-radius: 4px;\n    position: absolute;\n    top: 10px;\n    left: 0px;\n    z-index: 10;\n    pointer-events: none;\n`;\n\nconst TooltipItem = styled.div`\n    width: 100%;\n    color: black;\n\n    ${({color,removed}) => `\n        color: ${color};\n        display: ${removed ? 'none' : 'flex'};\n    `}\n`;\n\nconst LineTooltipContainer = styled.div`\n    display: block;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    z-index: 10;\n    pointer-events: none;\n`;\n\nconst LineTooltipItem = styled.div`\n    width: 60px;\n    height: 10px;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n\n    ${({color,removed,visible}) => `\n        color: ${color};\n        display: ${(removed || !visible) ? 'none' : 'block'};\n    `}\n`;\n\n\nconst Presenter = ({\n    setRef,\n    setTooltipRef,\n    setLineTooltipCanvasRef,\n    ranges,\n    intervals,\n    state: {\n        symbol,\n        symbols,\n        loading,\n        charts,\n        mouseOut\n    },\n    onAddSymbolClick,\n    onRemoveSymbolClick,\n    onResetClick,\n    onRangeClick,\n    onIntervalClick,\n    onVisibleClick,\n    onHighlightClick\n }) => {\n    const compares = charts.filter((d) => !d.removed);\n    const comparedSymbols = charts.map(({symbol: s}) => s);\n\n    return (\n        <Container>\n            <ChartContainer>\n                <ChartNavigations>\n                    <ButtonContainer>\n                        <Button onClick={onResetClick}>Reset</Button>\n                    </ButtonContainer>\n                    <ButtonContainer title={'range'}>\n                    {\n                        ranges.map(({text,value,sub},i) => <Button key={'r'+i} onClick={onRangeClick({value,sub})}>{text}</Button>)\n                    }\n                    </ButtonContainer>\n                    <ButtonContainer title={'interval'}>\n                    {\n                        intervals.map(({text,value,sub,barSpacing},j) => <Button key={'i'+j} onClick={onIntervalClick({value,sub,barSpacing})}>{text}</Button>)\n                    }\n                    </ButtonContainer>\n                </ChartNavigations>\n                <ChartCanvas id='chart-canvas' ref={setRef}>\n                    {\n                        loading ? <Loading>loading...</Loading> : null\n                    }\n                    <TooltipContainer ref={setTooltipRef}>\n                        {\n                            charts.map((d,i) => <TooltipItem text={d.symbol} removed={d.removed} color={d.color} key={'tti'+i}/>)\n                        }\n                    </TooltipContainer>\n                    <LineTooltipContainer ref={setLineTooltipCanvasRef}>\n                        {\n                            charts.map((d,i) => <LineTooltipItem text={d.symbol} removed={d.removed} color={d.color} key={'ttti'+i} visible={d.visible}/>)\n                        }\n                    </LineTooltipContainer>\n                </ChartCanvas>\n            </ChartContainer>\n            <RightContainer>\n                symbol 추가\n                <SymbolsContainer>\n                {\n                    symbols.map((d,i) => (\n                        <SymbolAddButton \n                            disabled={comparedSymbols.includes(d)}\n                            onClick={onAddSymbolClick(d)}\n                            key={`sab`+i}\n                        >\n                            {d}\n                        </SymbolAddButton>\n                    ))\n                }\n                </SymbolsContainer>\n                <CompareContainer>\n                    Symbol Compare\n                    <CompareSymbols>\n                    {\n                        compares.map((d,i) => \n                            <CompareSymbolLine style={{color: d.color}} key={`csl`+i}>\n                                <div style={{width: '50px'}}>{d.symbol}</div>\n                                {\n                                    <RemoveButton onClick={onRemoveSymbolClick(d.symbol)} style={{visibility: d.symbol !== symbol ? 'visible' : 'hidden'}}>삭제</RemoveButton>\n                                }\n                                <VisibleButton onClick={onVisibleClick(d.symbol)}>{d.visible ? '숨기기' : '보기'}</VisibleButton>\n                                <HighlightButton onClick={onHighlightClick(d.symbol)}>{d.hightlight ? '강조취소' : '강조하기'}</HighlightButton>\n                            </CompareSymbolLine>\n                        )\n                    }\n                    </CompareSymbols>\n                </CompareContainer>\n            </RightContainer>\n        </Container>\n    )\n };\n\n export default Presenter;","import axios from 'axios';\n\n\nconst request = (url) => {\n    return axios\n    .get(url, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(({data}) => data);\n};\n\nconst getSymbols = () => request('https://euijincho.github.io/tradingview-test-demo/symbols/list.json');\nconst getSeries = async (symbol) => {\n    const { historical } = await request(`https://euijincho.github.io/tradingview-test-demo/series/${symbol}.json`);\n    return historical.map(({ date, adjClose }) => ({ time: date, value: adjClose })).reverse();\n}\n\n\nexport default request;\nexport { getSymbols, getSeries };","import React from 'react';\nimport { createChart } from 'lightweight-charts';\nimport moment from 'moment';\nimport { pipe, reverse, filter, map, clone  } from 'ramda';\n\nimport Presenter from './presenter';\n\nimport { getSeries, getSymbols } from '../api';\n\n\nclass Chart extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.chartCanvasRef = null;\n        this.tootipCanvasRef = null;\n        this.lineTooltipCanvasRef = null;\n        this.chart = null;\n        this.defaultSymbol = 'AAPL';\n        this.lastDate = moment('2021-07-15');\n        this.ranges = [\n            { text: '1Month', value: 1, sub: 'months' },\n            { text: '6Month', value: 6, sub: 'months' },\n            { text: '1Year', value: 12, sub: 'months' }\n        ];\n        this.intervals = [\n            { text: '1Day', value: 1, sub: 'days', barSpacing: 6 },\n            { text: '1Week', value: 7, sub: 'days', barSpacing: 13 },\n            { text: '1Month', value: 30, sub: 'days', barSpacing: 30 }\n        ];\n\n        this.state = {\n            ranges: null,\n            symbols: [],\n            symbol: 'AAPL',\n            loading: true,\n            interval: 1,\n            charts: [\n                { symbol: '', color: 'red', series: undefined, data: [], removed: true, visible: true, hightlight: false },\n                { symbol: '', color: 'green', series: undefined, data: [], removed: true, visible: true, hightlight: false },\n                { symbol: '', color: 'blue', series: undefined, data: [], removed: true, visible: true, hightlight: false },\n                { symbol: '', color: 'black', series: undefined, data: [], removed: true, visible: true, hightlight: false },\n                { symbol: '', color: 'fuchsia', series: undefined, data: [], removed: true, visible: true, hightlight: false }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        this.intialize();\n    }\n\n    intialize = async () => {\n        if (!this.chartCanvasRef) return;\n\n        this.chart = createChart(this.chartCanvasRef,{\n            width: this.chartCanvasRef.clientWidth,\n            localization: {\n                dateFormat: 'yyyy-MM-dd'\n            },\n            priceScale: { \n                mode: 2,\n                autoScale: true,\n                scaleMargins: {\n                    top: 0.20,\n                    bottom: 0.25,\n                }\n            }           \n        });\n\n        this.chart.subscribeCrosshairMove((param) => {\n            const {time, point, seriesPrices} = param;\n            const { charts } = this.state;\n            if (!point || (seriesPrices.size === 0)) {\n                this.tootipCanvasRef.style.display = 'none';\n                this.lineTooltipCanvasRef.style.display = 'none';\n      \n                return;\n            }\n\n            const { x, y } = point;\n            const tooltips = Array.from(this.tootipCanvasRef.children);\n            const lineTooltips = Array.from(this.lineTooltipCanvasRef.children);\n            charts.forEach(({symbol,series,removed,data,visible},i) => {\n                const tooltip = tooltips[i];\n                const lineTooltip = lineTooltips[i];\n\n                if (!series || removed || !tooltip || !lineTooltip) return;\n\n                const { from } = this.chart.timeScale().getVisibleRange();\n                const value = seriesPrices.get(series);\n                const coordinate = series.priceToCoordinate(value);\n                const { value: initValue } = data.find(({time: { day,month,year} }) => (from.day === day) && (from.month === month) && (from.year === year));\n                const percent = ((value - initValue) * 100 / initValue);\n                \n                tooltip.innerText = `${symbol}: $${value.toFixed(2)}, ${percent.toFixed(2)}%`;\n\n                lineTooltip.innerText = `${percent.toFixed(2)}%`;\n                lineTooltip.style.left = (x - 30) + 'px';\n                lineTooltip.style.top = (coordinate - 50) + 'px';\n                lineTooltip.style.display = visible ? 'block' : 'none';\n            });\n\n            const tooltipsWidth = this.tootipCanvasRef.clientWidth;\n            const chartAreaWidth = this.chart.options().width - this.chart.priceScale().width();\n            const tooltipX = x-(tooltipsWidth/2);\n            \n            const minX = 0;\n            const maxX = Math.min(chartAreaWidth-tooltipsWidth,tooltipX)\n            const left = Math.max(minX,maxX);\n\n            this.tootipCanvasRef.style.left = left + 'px';\n            this.tootipCanvasRef.style.display = 'block';\n\n            this.lineTooltipCanvasRef.style.display = 'block';\n        });\n\n        this.setSymbols();\n        this.setSeries(this.state.symbol);\n\n        setTimeout(() => {\n            this.chart.timeScale().fitContent();\n            this.setState({loading: false});\n        },300)\n    }\n\n    setSymbols = async () => {\n        const symbols = await getSymbols();\n\n        this.setState({symbols});\n    }\n\n    setSeries = async (symbol) => {\n        const { charts } = this.state;\n        const isSameSymbol = charts.findIndex(({symbol: s}) => symbol === s);\n        const setSeriesIndex = charts.findIndex(({removed}) => removed);\n        if (!symbol || setSeriesIndex < 0 || !this.chart || isSameSymbol >= 0) return; \n        \n        const series = await getSeries(symbol);\n        const [ { color } ] = charts.splice(setSeriesIndex,1);\n        const lineSeries = this.chart.addLineSeries({ lastValueVisible: false, color });\n        lineSeries.setData(series);\n\n        charts.push({ symbol, color, series: lineSeries, data: series, removed: false, visible: true, hightlight: false });\n\n        this.setState({charts});\n    }\n\n    onAddSymbolClick = (symbol) => () => {\n        this.setSeries(symbol);\n    }\n\n    onRemoveSymbolClick = (symbol) => () => {\n        const { charts } = this.state;\n        const updateCharts = charts.map((d) => {\n            if (d.symbol === symbol && this.chart) {\n                this.chart.removeSeries(d.series);\n\n                return { symbol: '', series: undefined, removed: true, data: [], color: d.color, visible: true, hightlight: false };\n            }\n\n            return d;\n        })\n\n        this.setState({charts: updateCharts});\n    }\n\n    onRangeClick = ({value,sub}) => () => {\n        this.chart.timeScale().setVisibleRange({\n            from: moment(this.lastDate).subtract(value,sub).unix(),\n            to: moment(this.lastDate).unix()\n        })\n    }\n\n    onIntervalClick = ({value,sub,barSpacing}) => () => {\n        const { charts } = this.state;\n\n        charts.forEach(({data,series}) => {\n            if (series) {\n                const filteredData = this.getFilteredSeries({data, value, sub});\n                series.setData(filteredData);\n            }\n        })\n\n        if (barSpacing) {\n            this.chart.applyOptions({\n                timeScale: {\n                    barSpacing\n                }\n            })\n        }\n    }\n\n    onVisibleClick = (symbol) => () => {\n        const { charts } = this.state;\n        const updateCharts = charts.map((d) => {\n            if (d.symbol === symbol && d.series) {\n                d.series.applyOptions({\n                    visible: !d.visible\n                })\n\n                return { ...d, visible: !d.visible };\n            }\n\n            return d;\n        })\n\n        this.setState({charts: updateCharts});\n    }\n\n    onHighlightClick = (symbol) => () => {\n        const { charts } = this.state;\n        const updateCharts = charts.map((d) => {\n            if (d.symbol === symbol && d.series) {\n                d.series.applyOptions({\n                    lineWidth: d.hightlight ? 3 : 5\n                })\n\n                return { ...d, hightlight: !d.hightlight };\n            }\n\n            return d;\n        })\n\n        this.setState({charts: updateCharts});\n    }\n\n    getFilteredSeries = ({data=[],value,sub}) => {\n        let nextFilterDate;\n    \n        return pipe(\n            map(clone),\n            reverse,\n            filter(({time: { day, month, year }} = {}) => {\n                const time = `${year}-${month}-${day}`;\n                const date = moment(time);\n                nextFilterDate = nextFilterDate || date;\n        \n                if (date.isSameOrBefore(nextFilterDate)) {\n                    nextFilterDate = nextFilterDate.subtract(value,sub);\n        \n                    return true;\n                }\n        \n                return false;\n            }),\n            reverse\n        )(data)\n    };\n\n    render() {\n        return (\n            <Presenter\n                setRef={(ref) => this.chartCanvasRef = ref}\n                setTooltipRef={(ref) => this.tootipCanvasRef = ref}\n                setLineTooltipCanvasRef={(ref) => this.lineTooltipCanvasRef = ref}\n                ranges={this.ranges}\n                intervals={this.intervals}\n                state={this.state}\n                onAddSymbolClick={this.onAddSymbolClick}\n                onRemoveSymbolClick={this.onRemoveSymbolClick}\n                onResetClick={() => {\n                    this.setState({loading: true});\n\n                    this.onIntervalClick(this.intervals[0])();\n\n                    setTimeout(() => {\n                        this.chart.timeScale().fitContent();\n                        this.setState({loading: false});\n                    },100);\n                }}\n                onRangeClick={this.onRangeClick}\n                onIntervalClick={this.onIntervalClick}\n                onVisibleClick={this.onVisibleClick}\n                onHighlightClick={this.onHighlightClick}\n            />\n        )\n    }\n}\n\nexport default Chart;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Chart from './chart';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chart />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}