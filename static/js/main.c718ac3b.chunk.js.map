{"version":3,"sources":["reportWebVitals.js","chart/presenter.js","api.js","chart/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","styled","div","ChartContainer","ChartNavigations","ButtonContainer","title","Button","button","ChartCanvas","Loading","RightContainer","SymbolsContainer","SymbolAddButton","disabled","CompareContainer","CompareSymbols","CompareSymbolLine","RemoveButton","TooltipContainer","TooltipItem","color","removed","Presenter","setRef","setTooltipRef","ranges","intervals","state","symbol","symbols","loading","charts","onAddSymbolClick","mouseOut","onRemoveSymbolClick","onResetClick","onRangeClick","onIntervalClick","compares","filter","d","comparedSymbols","map","onClick","i","text","value","sub","j","barSpacing","id","ref","includes","style","width","request","url","axios","get","headers","data","getSeries","a","historical","time","date","adjClose","reverse","Chart","props","intialize","chartCanvasRef","chart","createChart","clientWidth","localization","dateFormat","priceScale","mode","autoScale","scaleMargins","top","bottom","subscribeCrosshairMove","point","seriesPrices","size","tooltips","Array","from","tootipCanvasRef","children","forEach","series","tooltip","timeScale","getVisibleRange","initValue","find","day","month","year","percent","innerText","toFixed","x","tooltipsWidth","chartAreaWidth","options","tooltipX","maxX","Math","min","left","max","display","setSymbols","setSeries","setTimeout","fitContent","setState","isSameSymbol","findIndex","s","setSeriesIndex","splice","lineSeries","addLineSeries","lastValueVisible","setData","push","updateCharts","removeSeries","undefined","setVisibleRange","moment","lastDate","subtract","unix","to","filteredData","getFilteredSeries","applyOptions","nextFilterDate","pipe","clone","isSameOrBefore","defaultSymbol","interval","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c718ac3b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n    display: flex;\n    width: 100vw;\n    margin-top: 12px;\n`;\n\nconst ChartContainer = styled.div`\n    width: 70%;\n    max-width: 700px;\n    height: 500px;\n`;\n\nconst ChartNavigations = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    margin-right: 8px;\n    border: 1px solid;\n    padding: 4px;\n    height: 30px;\n\n    ${({title}) => title ? `\n        &::before {\n            content: '${title}';\n            margin-right: 4px;\n        }\n    ` : ''}\n`;\n\nconst Button = styled.button`\n    height: 20px;\n`;\n\nconst ChartCanvas = styled.div`\n    height: calc(100% - 30px);\n    position: relative;\n`;\n\nconst Loading = styled.div`\n    width: 100%;\n    height: 100%;\n    background: white;\n    top: 0;\n    left: 0;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 100;\n`;\n\nconst RightContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-width: 300px;\n`;\n\nconst SymbolsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    margin-bottom: 20px;\n`;\n\nconst SymbolAddButton = styled.button`\n    width: 50px;\n    height: 50px;\n    ${({disabled}) => disabled ? `\n        pointer-events: none;\n        opacity: 0.7;\n    ` : ''}\n`;\n\nconst CompareContainer = styled.div``;\nconst CompareSymbols = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst CompareSymbolLine = styled.div`\n    width: 100%;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid black;\n`;\n\nconst RemoveButton = styled.button`\n    width: 40px;\n    height: 20px;\n    margin-left: 12px;\n`;\n\nconst TooltipContainer = styled.div`\n    background: rgba(0,0,0,0.3);\n    width: 220px;\n    padding: 4px;\n    display: none;\n    border-radius: 4px;\n    position: absolute;\n    top: 10px;\n    left: 0px;\n    z-index: 10;\n    pointer-events: none;\n`;\n\nconst TooltipItem = styled.div`\n    width: 100%;\n    color: black;\n\n    ${({color,removed}) => `\n        color: ${color};\n        display: ${removed ? 'none' : 'flex'};\n    `}\n`;\n\n\nconst Presenter = ({\n    setRef,\n    setTooltipRef,\n    ranges,\n    intervals,\n    state: {\n        symbol,\n        symbols,\n        loading,\n        charts,\n        mouseOut\n    },\n    onAddSymbolClick,\n    onRemoveSymbolClick,\n    onResetClick,\n    onRangeClick,\n    onIntervalClick\n }) => {\n    const compares = charts.filter((d) => !d.removed);\n    const comparedSymbols = charts.map(({symbol: s}) => s);\n\n    return (\n        <Container>\n            <ChartContainer>\n                <ChartNavigations>\n                    <ButtonContainer>\n                        <Button onClick={onResetClick}>Reset</Button>\n                    </ButtonContainer>\n                    <ButtonContainer title={'range'}>\n                    {\n                        ranges.map(({text,value,sub},i) => <Button key={'r'+i} onClick={onRangeClick({value,sub})}>{text}</Button>)\n                    }\n                    </ButtonContainer>\n                    <ButtonContainer title={'interval'}>\n                    {\n                        intervals.map(({text,value,sub,barSpacing},j) => <Button key={'i'+j} onClick={onIntervalClick({value,sub,barSpacing})}>{text}</Button>)\n                    }\n                    </ButtonContainer>\n                </ChartNavigations>\n                <ChartCanvas id='chart-canvas' ref={setRef}>\n                    {\n                        loading ? <Loading>loading...</Loading> : null\n                    }\n                    <TooltipContainer ref={setTooltipRef}>\n                        {\n                            charts.map((d,i) => <TooltipItem text={d.symbol} removed={d.removed} color={d.color} key={'tti'+i}/>)\n                        }\n                    </TooltipContainer>\n                </ChartCanvas>\n            </ChartContainer>\n            <RightContainer>\n                symbol 추가\n                <SymbolsContainer>\n                {\n                    symbols.map((d,i) => (\n                        <SymbolAddButton \n                            disabled={comparedSymbols.includes(d)}\n                            onClick={onAddSymbolClick(d)}\n                            key={`sab`+i}\n                        >\n                            {d}\n                        </SymbolAddButton>\n                    ))\n                }\n                </SymbolsContainer>\n                <CompareContainer>\n                    Symbol Compare\n                    <CompareSymbols>\n                    {\n                        compares.map((d,i) => \n                            <CompareSymbolLine style={{color: d.color}} key={`csl`+i}>\n                                <div style={{width: '50px'}}>{d.symbol}</div>\n                                {\n                                    d.symbol !== symbol ? \n                                    <RemoveButton onClick={onRemoveSymbolClick(d.symbol)}>삭제</RemoveButton> : null\n                                }\n                            </CompareSymbolLine>\n                        )\n                    }\n                    </CompareSymbols>\n                </CompareContainer>\n            </RightContainer>\n        </Container>\n    )\n };\n\n export default Presenter;","import axios from 'axios';\n\n\nconst request = (url) => {\n    return axios\n    .get(url, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(({data}) => data);\n};\n\nconst getSymbols = () => request('https://euijincho.github.io/tradingview-test/symbols/list.json');\nconst getSeries = async (symbol) => {\n    const { historical } = await request(`https://euijincho.github.io/tradingview-test/series/${symbol}.json`);\n    return historical.map(({ date, adjClose }) => ({ time: date, value: adjClose })).reverse();\n}\n\n\nexport default request;\nexport { getSymbols, getSeries };","import React from 'react';\nimport { createChart } from 'lightweight-charts';\nimport moment from 'moment';\nimport { pipe, reverse, filter, map, clone  } from 'ramda';\n\nimport Presenter from './presenter';\n\nimport { getSeries, getSymbols } from '../api';\n\n\nclass Chart extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.chartCanvasRef = null;\n        this.tootipCanvasRef = null;\n        this.chart = null;\n        this.defaultSymbol = 'AAPL';\n        this.lastDate = moment('2021-07-15');\n        this.ranges = [\n            { text: '1Month', value: 1, sub: 'months' },\n            { text: '6Month', value: 6, sub: 'months' },\n            { text: '1Year', value: 12, sub: 'months' }\n        ];\n        this.intervals = [\n            { text: '1Day', value: 1, sub: 'days', barSpacing: 6 },\n            { text: '1Week', value: 7, sub: 'days', barSpacing: 13 },\n            { text: '1Month', value: 30, sub: 'days', barSpacing: 30 }\n        ];\n\n        this.state = {\n            ranges: null,\n            symbols: [],\n            symbol: 'AAPL',\n            loading: true,\n            interval: 1,\n            charts: [\n                { symbol: '', color: 'red', series: undefined, data: [], removed: true },\n                { symbol: '', color: 'green', series: undefined, data: [], removed: true },\n                { symbol: '', color: 'blue', series: undefined, data: [], removed: true },\n                { symbol: '', color: 'black', series: undefined, data: [], removed: true },\n                { symbol: '', color: 'fuchsia', series: undefined, data: [], removed: true }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        this.intialize();\n    }\n\n    intialize = async () => {\n        if (!this.chartCanvasRef) return;\n\n        this.chart = createChart(this.chartCanvasRef,{\n            width: this.chartCanvasRef.clientWidth,\n            localization: {\n                dateFormat: 'yyyy-MM-dd',\n            },\n            priceScale: { \n                mode: 2,\n                autoScale: true,\n                scaleMargins: {\n                    top: 0.20,\n                    bottom: 0.25,\n                }\n            }           \n        });\n\n        this.chart.subscribeCrosshairMove(({time, point, seriesPrices}) => {\n            const { charts } = this.state;\n            if (!point || (seriesPrices.size === 0)) {\n                this.tootipCanvasRef.style.display = 'none';\n      \n                return;\n            }\n\n            const tooltips = Array.from(this.tootipCanvasRef.children);\n            charts.forEach(({symbol,series,removed,data},i) => {\n                const tooltip = tooltips[i];\n\n                if (!series || removed || !tooltip) return;\n\n                const { from } = this.chart.timeScale().getVisibleRange();\n                const value = seriesPrices.get(series);\n                const { value: initValue } = data.find(({time: { day,month,year} }) => (from.day === day) && (from.month === month) && (from.year === year));\n                const percent = ((value - initValue) * 100 / initValue);\n                \n                tooltip.innerText = `${symbol}: $${value.toFixed(2)}, ${percent.toFixed(2)}%`;\n            });\n\n            const { x } = point;\n            const tooltipsWidth = this.tootipCanvasRef.clientWidth;\n            const chartAreaWidth = this.chart.options().width - this.chart.priceScale().width();\n            const tooltipX = x-(tooltipsWidth/2);\n            \n            const minX = 0;\n            const maxX = Math.min(chartAreaWidth-tooltipsWidth,tooltipX)\n            const left = Math.max(minX,maxX);\n\n            this.tootipCanvasRef.style.left = left + 'px';\n            this.tootipCanvasRef.style.display = 'block';\n        });\n\n        this.setSymbols();\n        this.setSeries(this.state.symbol);\n\n        setTimeout(() => {\n            this.chart.timeScale().fitContent();\n            this.setState({loading: false});\n        },300)\n    }\n\n    setSymbols = async () => {\n        const symbols = await getSymbols();\n\n        this.setState({symbols});\n    }\n\n    setSeries = async (symbol) => {\n        const { charts } = this.state;\n        const isSameSymbol = charts.findIndex(({symbol: s}) => symbol === s);\n        const setSeriesIndex = charts.findIndex(({removed}) => removed);\n        if (!symbol || setSeriesIndex < 0 || !this.chart || isSameSymbol >= 0) return; \n        \n        const series = await getSeries(symbol);\n        const [ { color } ] = charts.splice(setSeriesIndex,1);\n        const lineSeries = this.chart.addLineSeries({ lastValueVisible: false, color });\n        lineSeries.setData(series);\n\n        charts.push({ symbol, color, series: lineSeries, data: series, removed: false });\n\n        this.setState({charts});\n    }\n\n    onAddSymbolClick = (symbol) => () => {\n        this.setSeries(symbol);\n    }\n\n    onRemoveSymbolClick = (symbol) => () => {\n        const { charts } = this.state;\n        const updateCharts = charts.map((d) => {\n            if (d.symbol === symbol && this.chart) {\n                this.chart.removeSeries(d.series);\n\n                return { symbol: '', series: undefined, removed: true, data: [], color: d.color };\n            }\n\n            return d;\n        })\n\n        this.setState({charts: updateCharts});\n    }\n\n    onRangeClick = ({value,sub}) => () => {\n        this.chart.timeScale().setVisibleRange({\n            from: moment(this.lastDate).subtract(value,sub).unix(),\n            to: moment(this.lastDate).unix()\n        })\n    }\n\n    onIntervalClick = ({value,sub,barSpacing}) => () => {\n        const { charts } = this.state;\n\n        charts.forEach(({data,series}) => {\n            if (series) {\n                const filteredData = this.getFilteredSeries({data, value, sub});\n                series.setData(filteredData);\n            }\n        })\n\n        if (barSpacing) {\n            this.chart.applyOptions({\n                timeScale: {\n                    barSpacing\n                }\n            })\n        }\n    }\n\n    getFilteredSeries = ({data=[],value,sub}) => {\n        let nextFilterDate;\n    \n        return pipe(\n            map(clone),\n            reverse,\n            filter(({time: { day, month, year }} = {}) => {\n                const time = `${year}-${month}-${day}`;\n                const date = moment(time);\n                nextFilterDate = nextFilterDate || date;\n        \n                if (date.isSameOrBefore(nextFilterDate)) {\n                    nextFilterDate = nextFilterDate.subtract(value,sub);\n        \n                    return true;\n                }\n        \n                return false;\n            }),\n            reverse\n        )(data)\n    };\n\n    \n\n    render() {\n        return (\n            <Presenter\n                setRef={(ref) => this.chartCanvasRef = ref}\n                setTooltipRef={(ref) => this.tootipCanvasRef = ref}\n                ranges={this.ranges}\n                intervals={this.intervals}\n                state={this.state}\n                onAddSymbolClick={this.onAddSymbolClick}\n                onRemoveSymbolClick={this.onRemoveSymbolClick}\n                onResetClick={() => {\n                    this.setState({loading: true});\n\n                    this.onIntervalClick(this.intervals[0])();\n\n                    setTimeout(() => {\n                        this.chart.timeScale().fitContent();\n                        this.setState({loading: false});\n                    },100);\n                }}\n                onRangeClick={this.onRangeClick}\n                onIntervalClick={this.onIntervalClick}\n            />\n        )\n    }\n\n}\n\nexport default Chart;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Chart from './chart';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chart />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}